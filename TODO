Priority:
- client_id / client_secret
- CORS
- https://hashnode.com/post/jwt-authentication-in-4-easy-steps-cksd5fmfi06vtu5s1e59e7cya
- 2 methods called authenticate user (crud.user and dependencies.auth)
- difference between dep and util

Nice to have:
- TZ information
- password regex
- JWK x5c/x5t https://stackoverflow.com/questions/69179822/jwk-key-creation-with-x5c-and-x5t-parameters
- certificate
- type of keys in KeyPair schema (wait for https://github.com/mpdavis/python-jose/pull/295)

Not yet tested:
- refresh token (JWT or UUID ???)
- use scope system to authorize usage of endpoints
- import users/roles from file
- export to file
- api token generation

Not needed:
- custom base model with fastapi jsonable_encoder

Done:
✓ Use Pydantic BaseSetting for Config
✓ make sure username in oauth2 is email
✓ role system
✓ scope system
✓ first user admin
✓ public key JWK endpoint
✓ DB Mixin
✓ custom logger

Links:
- https://pyjwt.readthedocs.io/en/stable/usage.html#retrieve-rsa-signing-keys-from-a-jwks-endpoint
- https://www.geocerts.com/certificate-decoder
- https://certificatetools.com/
- https://datatracker.ietf.org/doc/html/rfc7517
- https://auth0.com/docs/secure/tokens/json-web-tokens/json-web-key-set-properties
- https://jwt.io/#debugger-io