Priority:
- move scopes into other file (not constants - maybe auth or security??)
- are refresh tokens needed for a cookie based auth system?
- error handling, most importantly for db errors

Nice to have:
- TZ information
- JWK x5c/x5t https://stackoverflow.com/questions/69179822/jwk-key-creation-with-x5c-and-x5t-parameters
- certificate
- type of keys in KeyPair schema (wait for https://github.com/mpdavis/python-jose/pull/295)
- scope management in db

Not yet tested:
- use scope system to authorize usage of endpoints
- import users/roles from file
- export to file
- api token generation
- cookie based auth
- custom types for username and password (with regex - on/off via config)
- CORS
- jinja2 templates for easy testing
- dont send TokenPair back after login/refresh (only set cookies)

Not needed:
- custom base model with fastapi jsonable_encoder
- client_id / client_secret

Done:
✓ Use Pydantic BaseSetting for Config
✓ make sure username in oauth2 is email
✓ role system
✓ scope system
✓ first user admin
✓ public key JWK endpoint
✓ DB Mixin
✓ custom logger
✓ util -> utils
✓ Cookie/Token Auth for docs (on/off in config)
✓ log out with cookie delete
✓ split security.py into dependencies and non-dependencies
✓ update role endpoint
✓ username/password not set in config -> validation error -> log to console
✓ response doesnt need "www-authenticate Bearer"
✓ discuss if two oauth2 schemas are necessary -> Nope
✓ key pair management (rotation?) -> generating new pairs if no valid found

Links:
- https://nilsdebruin.medium.com/fastapi-how-to-add-basic-and-cookie-authentication-a45c85ef47d3